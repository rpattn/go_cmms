// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"net/netip"

	"github.com/jackc/pgx/v5/pgtype"
)

type Asset struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Customer struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	Email     pgtype.Text        `db:"email" json:"email"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type File struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Path      pgtype.Text        `db:"path" json:"path"`
	Filename  pgtype.Text        `db:"filename" json:"filename"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Identity struct {
	ID       pgtype.UUID `db:"id" json:"id"`
	UserID   pgtype.UUID `db:"user_id" json:"user_id"`
	Provider string      `db:"provider" json:"provider"`
	Subject  string      `db:"subject" json:"subject"`
}

type IdpGroupRoleMapping struct {
	OrgID      pgtype.UUID `db:"org_id" json:"org_id"`
	Provider   string      `db:"provider" json:"provider"`
	IdpGroupID string      `db:"idp_group_id" json:"idp_group_id"`
	RoleName   interface{} `db:"role_name" json:"role_name"`
}

type LocalCredential struct {
	UserID             pgtype.UUID        `db:"user_id" json:"user_id"`
	Username           string             `db:"username" json:"username"`
	PasswordHash       string             `db:"password_hash" json:"password_hash"`
	CreatedAt          pgtype.Timestamptz `db:"created_at" json:"created_at"`
	LastPasswordChange pgtype.Timestamptz `db:"last_password_change" json:"last_password_change"`
}

type Location struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type LoginAttempt struct {
	ID       int64              `db:"id" json:"id"`
	Username string             `db:"username" json:"username"`
	Ip       netip.Addr         `db:"ip" json:"ip"`
	Ts       pgtype.Timestamptz `db:"ts" json:"ts"`
	Success  bool               `db:"success" json:"success"`
}

type Meter struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type OrgMembership struct {
	OrgID  pgtype.UUID `db:"org_id" json:"org_id"`
	UserID pgtype.UUID `db:"user_id" json:"user_id"`
	Role   interface{} `db:"role" json:"role"`
}

type Organisation struct {
	ID         pgtype.UUID        `db:"id" json:"id"`
	Slug       string             `db:"slug" json:"slug"`
	Name       string             `db:"name" json:"name"`
	MsTenantID pgtype.Text        `db:"ms_tenant_id" json:"ms_tenant_id"`
	CreatedAt  pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type PasswordReset struct {
	Token     string             `db:"token" json:"token"`
	UserID    pgtype.UUID        `db:"user_id" json:"user_id"`
	ExpiresAt pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	UsedAt    pgtype.Timestamptz `db:"used_at" json:"used_at"`
}

type PreventiveMaintenance struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Request struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Title     pgtype.Text        `db:"title" json:"title"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type SeedCfg struct {
	Email    pgtype.Text `db:"email" json:"email"`
	Name     pgtype.Text `db:"name" json:"name"`
	Username pgtype.Text `db:"username" json:"username"`
	Phc      pgtype.Text `db:"phc" json:"phc"`
	OrgSlug  pgtype.Text `db:"org_slug" json:"org_slug"`
	OrgName  pgtype.Text `db:"org_name" json:"org_name"`
	MsTenant pgtype.Text `db:"ms_tenant" json:"ms_tenant"`
}

type SeedOrg struct {
	Slug       pgtype.Text `db:"slug" json:"slug"`
	Name       pgtype.Text `db:"name" json:"name"`
	MsTenantID pgtype.Text `db:"ms_tenant_id" json:"ms_tenant_id"`
}

type Task struct {
	ID                      pgtype.UUID        `db:"id" json:"id"`
	OrganisationID          pgtype.UUID        `db:"organisation_id" json:"organisation_id"`
	CreatedAt               pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt               pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	CreatedByID             pgtype.UUID        `db:"created_by_id" json:"created_by_id"`
	TaskBaseID              pgtype.UUID        `db:"task_base_id" json:"task_base_id"`
	Notes                   pgtype.Text        `db:"notes" json:"notes"`
	Value                   pgtype.Text        `db:"value" json:"value"`
	PreviousValue           pgtype.Text        `db:"previous_value" json:"previous_value"`
	WorkOrderID             pgtype.UUID        `db:"work_order_id" json:"work_order_id"`
	PreventiveMaintenanceID pgtype.UUID        `db:"preventive_maintenance_id" json:"preventive_maintenance_id"`
}

type TaskBasis struct {
	ID             pgtype.UUID        `db:"id" json:"id"`
	OrganisationID pgtype.UUID        `db:"organisation_id" json:"organisation_id"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	CreatedByID    pgtype.UUID        `db:"created_by_id" json:"created_by_id"`
	Label          string             `db:"label" json:"label"`
	TaskType       string             `db:"task_type" json:"task_type"`
	UserID         pgtype.UUID        `db:"user_id" json:"user_id"`
	AssetID        pgtype.UUID        `db:"asset_id" json:"asset_id"`
	MeterID        pgtype.UUID        `db:"meter_id" json:"meter_id"`
}

type TaskFile struct {
	TaskID pgtype.UUID `db:"task_id" json:"task_id"`
	FileID pgtype.UUID `db:"file_id" json:"file_id"`
}

type TaskOption struct {
	ID             pgtype.UUID        `db:"id" json:"id"`
	OrganisationID pgtype.UUID        `db:"organisation_id" json:"organisation_id"`
	CreatedAt      pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	CreatedByID    pgtype.UUID        `db:"created_by_id" json:"created_by_id"`
	Label          pgtype.Text        `db:"label" json:"label"`
	TaskBaseID     pgtype.UUID        `db:"task_base_id" json:"task_base_id"`
}

type Team struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type User struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Email     string             `db:"email" json:"email"`
	Name      pgtype.Text        `db:"name" json:"name"`
	AvatarUrl pgtype.Text        `db:"avatar_url" json:"avatar_url"`
	Phone     pgtype.Text        `db:"phone" json:"phone"`
	Country   pgtype.Text        `db:"country" json:"country"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type UserTotp struct {
	UserID    pgtype.UUID        `db:"user_id" json:"user_id"`
	Secret    string             `db:"secret" json:"secret"`
	Issuer    string             `db:"issuer" json:"issuer"`
	Label     string             `db:"label" json:"label"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type WorkOrder struct {
	ID                      pgtype.UUID        `db:"id" json:"id"`
	OrganisationID          pgtype.UUID        `db:"organisation_id" json:"organisation_id"`
	CreatedAt               pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt               pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
	CreatedByID             pgtype.UUID        `db:"created_by_id" json:"created_by_id"`
	DueDate                 pgtype.Timestamptz `db:"due_date" json:"due_date"`
	Priority                string             `db:"priority" json:"priority"`
	EstimatedDuration       float64            `db:"estimated_duration" json:"estimated_duration"`
	EstimatedStartDate      pgtype.Timestamptz `db:"estimated_start_date" json:"estimated_start_date"`
	Description             pgtype.Text        `db:"description" json:"description"`
	Title                   string             `db:"title" json:"title"`
	RequiredSignature       bool               `db:"required_signature" json:"required_signature"`
	ImageID                 pgtype.UUID        `db:"image_id" json:"image_id"`
	CategoryID              pgtype.UUID        `db:"category_id" json:"category_id"`
	LocationID              pgtype.UUID        `db:"location_id" json:"location_id"`
	TeamID                  pgtype.UUID        `db:"team_id" json:"team_id"`
	PrimaryUserID           pgtype.UUID        `db:"primary_user_id" json:"primary_user_id"`
	AssetID                 pgtype.UUID        `db:"asset_id" json:"asset_id"`
	CustomID                pgtype.Text        `db:"custom_id" json:"custom_id"`
	CompletedByID           pgtype.UUID        `db:"completed_by_id" json:"completed_by_id"`
	CompletedOn             pgtype.Timestamptz `db:"completed_on" json:"completed_on"`
	Status                  string             `db:"status" json:"status"`
	SignatureID             pgtype.UUID        `db:"signature_id" json:"signature_id"`
	Archived                bool               `db:"archived" json:"archived"`
	ParentRequestID         pgtype.UUID        `db:"parent_request_id" json:"parent_request_id"`
	Feedback                pgtype.Text        `db:"feedback" json:"feedback"`
	ParentPreventiveMaintID pgtype.UUID        `db:"parent_preventive_maint_id" json:"parent_preventive_maint_id"`
	FirstTimeToReact        pgtype.Timestamptz `db:"first_time_to_react" json:"first_time_to_react"`
}

type WorkOrderAssignedTo struct {
	WorkOrderID pgtype.UUID `db:"work_order_id" json:"work_order_id"`
	UserID      pgtype.UUID `db:"user_id" json:"user_id"`
}

type WorkOrderCategory struct {
	ID        pgtype.UUID        `db:"id" json:"id"`
	Name      pgtype.Text        `db:"name" json:"name"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type WorkOrderCounter struct {
	OrganisationID pgtype.UUID `db:"organisation_id" json:"organisation_id"`
	Year           int32       `db:"year" json:"year"`
	NextSeq        int32       `db:"next_seq" json:"next_seq"`
}

type WorkOrderCustomer struct {
	WorkOrderID pgtype.UUID `db:"work_order_id" json:"work_order_id"`
	CustomerID  pgtype.UUID `db:"customer_id" json:"customer_id"`
}

type WorkOrderFile struct {
	WorkOrderID pgtype.UUID `db:"work_order_id" json:"work_order_id"`
	FileID      pgtype.UUID `db:"file_id" json:"file_id"`
}
